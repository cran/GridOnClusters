// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// findgrid
Rcpp::List findgrid(const Rcpp::List cluster_info, int k, int nobs, int ndims, const Rcpp::IntegerVector& bin_limit);
RcppExport SEXP _GridOnClusters_findgrid(SEXP cluster_infoSEXP, SEXP kSEXP, SEXP nobsSEXP, SEXP ndimsSEXP, SEXP bin_limitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type cluster_info(cluster_infoSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< int >::type ndims(ndimsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type bin_limit(bin_limitSEXP);
    rcpp_result_gen = Rcpp::wrap(findgrid(cluster_info, k, nobs, ndims, bin_limit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GridOnClusters_findgrid", (DL_FUNC) &_GridOnClusters_findgrid, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_GridOnClusters(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
